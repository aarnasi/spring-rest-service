/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.springframework.boot' version '3.3.0'
}
group =  'com.example'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = 17

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation group: 'junit', name: 'junit', version: '4.4'

    // This dependency is used by the application.
    implementation("com.google.guava:guava:33.2.1-jre")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}




application {
    // Define the main class for the application.
    mainClass = 'org.example.restservice.RestServiceApplication'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.example.restservice.RestServiceApplication'
        )
    }

    // Include resources and main classes
    from sourceSets.main.output
    include '**/*.class'
    include '**/*.properties' // Include additional resources if necessary

    // Set the JAR file name and destination directory
    archiveFileName = 'my-java-app.jar'
    //    destinationDir = file("$buildDir/libs")
}

test {
    useJUnitPlatform()
}